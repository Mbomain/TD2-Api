openapi: 3.0.3
info:
  title: STD23000 - TD2
  version: '1.0.2'
servers:
  - url: https://localhost.std230xxx.com
paths:
  /customers:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  age:
                    type: integer
        required: true
      responses:
        200:
          description: List of created customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    put:
      summary: Update an existing customer completely
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: List of updated customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    patch:
      summary: Update an existing customer partially
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPatch'
        required: true
      responses:
        200:
          description: Updated customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerIdentifier'
        required: true
      responses:
        200:
          description: List of deleted customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{customerId}/orders:
    get:
      summary: Get a list of orders for a specific customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order for a specific customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created order
    put:
      summary: Update an existing order for a specific customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Updated order
  /meals:
      get:
        summary: Get a list of meals
        parameters:
          - name: page
            in: query
            description: Page number
            required: true
            schema:
              type: integer
          - name: pageSize
            in: query
            description: Page size
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List of meals
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Meal'
      post:
        summary: Create a new meal
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        responses:
          '201':
            description: Created meal
      put:
        summary: Update an existing meal
        parameters:
          - name: id
            in: path
            description: Meal ID
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        responses:
          '200':
            description: Updated meal
      delete:
        summary: Delete a meal
        parameters:
          - name: id
            in: path
            description: Meal ID
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Meal deleted
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
    CustomerIdentifier:
      type: object
      properties:
        id:
          type: string
    CustomerPatch:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
      required:
        - id
    Meal:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    Order:
      type: object
      properties:
        id:
          type: string
        reference:
          type: string
        meals:
          type: array
          items:
            type: object
            properties:
              meal:
                $ref: '#/components/schemas/Meal'
              quantity:
                type: integer
        orderDatetime:
          type: string
          format: date-time
