# paths.yaml
paths:
  /customers:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  age:
                    type: integer
        required: true
      responses:
        200:
          description: List of created customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: List of updated customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    delete:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerIdentifier'
        required: true
      responses:
        200:
          description: List of deleted customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{customerId}/orders:
    get:
      summary: Get a list of orders for a specific customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order for a specific customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created order
    put:
      summary: Update an existing order for a specific customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Updated order
  /meals:
    get:
      summary: Get a list of meals
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
    post:
      summary: Create a new meal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
      responses:
        '201':
          description: Created meal
    put:
      summary: Update an existing meal
      parameters:
        - name: id
          in: path
          description: Meal ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
      responses:
        '200':
          description: Updated meal
    delete:
      summary: Delete a meal
      parameters:
        - name: id
          in: path
          description: Meal ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Meal deleted
